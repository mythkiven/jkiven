require 'active_support'
require 'active_support/core_ext'

# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Actions.md
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "1.105.0"

default_platform :ios

platform :ios do
  lane :release do |options|
    ensure_git_status_clean
    ensure_git_branch(branch: 'master')
    git_pull

    version_hash = update_version_number(version_bump_type: options[:version_bump_type])
    final_version_number = version_hash[:final_version_number]

    gym(
      use_legacy_build_api: true,
      toolchain: "swift_2_3",
      clean: true,
      scheme: "Company",
      configuration: "DistributionExternal",
      xcargs: "COCOAPODS=1",
      output_directory: "../ExternalBuilds",
      output_name: "Company-#{final_version_number}.ipa"
    )

    ipa_path = "../ExternalBuilds/Company-#{final_version_number}.ipa"
    dsym_path = "../ExternalBuilds/Company-#{final_version_number}.app.dSYM.zip"
    crashlytics_api_token = ENV["CRASHLYTICS_API_TOKEN"]

    crashlytics(
      crashlytics_path: "Pods/Crashlytics",
      ipa_path: ipa_path,
      api_token: crashlytics_api_token,
      build_secret: ENV["CRASHLYTICS_BUILD_SECRET"],
    )

    upload_symbols_to_crashlytics(
      dsym_path: dsym_path,
      api_token: crashlytics_api_token
    )

    s3(
      ipa: ipa_path,
      dsym: dsym_path,
      bucket: "mobile-ios-assets",
      path: "ConsumerVersions/",
      upload_metadata: "true",
      plist_template_path: "fastlane/Company_plist_template",
      plist_file_name: "Versions/Company-#{final_version_number}.plist",
      version_file_name: "ConsumerVersions/current_consumer_version.json",
      html_file_name: "Company.html"
    )

    deliver(
      ipa: ipa_path,
      app_version: version_hash[:version_number],
    )

    slack(
      message: "New iOS build submitted to the App Store! Waiting on üëç from üçè",
      channel: "app-releases"
    )
  end

  lane :bump_version do |options|
    increment_version_number(
      bump_type: options[:bump_type]
    )
    increment_build_number(
      build_number: 1
    )
  end

  lane :bump_build_number do
    version = increment_build_number()
  end

  lane :update_version_number do |options|
    version_bump_type = options[:version_bump_type]

    valid_bump_types = ["major", "minor", "patch", "build", "skip"]

    valid = false
    valid_bump_types.each do |type|
      valid = type == version_bump_type
      break if valid
    end

    error_message = "Must pass a version_bump_type value i.e. fastlane [lane] version_bump_type:minor"
    if !valid
      UI.error(error_message)
      raise error_message
    end

    requires_git_push = false

    if version_bump_type != "skip"
      if version_bump_type == "build"
        bump_build_number()
      else
        bump_version(bump_type: version_bump_type)
      end
      requires_git_push = true
      commit_version_bump
    end

    version_number = get_version_number()
    build_number = get_build_number()
    final_version_number = version_number + "." + build_number

    if !git_tag_exists(tag: final_version_number)
      add_git_tag(tag: final_version_number)
      requires_git_push = true
    end

    push_to_git_remote if requires_git_push

    { final_version_number: final_version_number, version_number: version_number, build_number: build_number }
  end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Actions.md

# fastlane reports which actions are used
# No personal data is recorded. Learn more at https://github.com/fastlane/enhancer